{"version":3,"sources":["scene/lights.js","scene/biomes.js","scene/materials.js","scene/models.js","scene/planet.js","scene/hero.js","scene/player.js","scene/composer.js","Scene.js","FrontPage.js","App.js","index.js"],"names":["moonColor","sunColor","Lights","fog","target","distance","rotationSpeed","size","moonLight","THREE","sunLight","morningLight","eveningLight","geometry","moonMaterial","color","sunMaterial","moon","sun","daytimeAngle","Math","PI","daytimeX","cos","daytimeY","sin","targetPosition","daytimePosition","position","set","add","animate","delta","rotateY","getWorldPosition","daytime","angleTo","daytimeColor","chroma","hex","far","length","polarLatitude","temperateLatitude","tropicalLatitude","materials","flatShading","shininess","animateBiomes","oceanMaterial","offset","x","transparent","opacity","side","Mat","blackMat","brownMat","greenMat","pinkMat","lightBrownMat","whiteMat","skinMat","blueMat","Tree","trunc","Trunc","topRadius","bottomRadius","height","nhSegments","nvSegments","matTrunc","geom","applyMatrix4","makeTranslation","castShadow","growFruit","v","random","fruitGeometry","matFruit","obj","keys","Object","randomProperty","fruit","y","z","rotation","growBranch","h","thickness","branchGeometry","branch","vec","axis","quaternion","setFromUnitVectors","clone","normalize","i","attributes","count","noise","fromBufferAttribute","getAttribute","Planet","radius","widthSegments","heightSegments","noiseProps","NoiseSphereGeometry","toNonIndexed","biomes","normal","vertex","a","b","c","faceElevation","max","faceNormal","setMaterialIndex","base","materialIndex","parseInt","min","latitude","abs","addGroup","applyBiomes","oceanGeometry","ocean","phi","j","theta","fir","seed","noiseWidth","noiseHeight","noiseMax","noiseMin","elevation","positions","newVertex","getNoise","vertice","p","fade","t","lerp","grad","hash","u","floorX","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB","ImprovedNoise","l","push","noiseN","setLength","scalar","setAttribute","Float32Array","Rabbit","status","runningCycle","body","totalSpeed","torsoGeom","torso","pantsGeom","pants","tailGeom","tail","headGeom","head","cheekGeom","cheekR","cheekL","noseGeom","nose","LightBrownMat","mouthGeom","makeRotationX","mouth","pawFGeom","pawFR","pawFL","pawBGeom","pawBL","pawBR","earGeom","earL","earR","eyeGeom","eyeL","irisGeom","iris","eyeR","children","scale","traverse","object","receiveShadow","run","jump","TWEEN","Tween","to","easing","Easing","Back","Out","start","Elastic","delay","In","Fish","fishFastColor","fishSlowColor","bodyGeom","bodyMat","bodyFish","tailMat","tailFish","lipsGeom","lipsMat","lipsFish","topFish","sideRightFish","sideLeftFish","eyeMat","rightEye","irisMat","rightIris","leftEye","leftIris","toothGeom","toothMat","tooth1","tooth2","tooth3","tooth4","tooth5","rvalue","gvalue","bvalue","material","setRGB","r","g","Bounce","Hero","handGeom","handR","handL","legGeom","legR","legL","Quadratic","PlayerCamera","fov","camera","window","innerWidth","innerHeight","translateZ","translateY","rotateX","getPerspectiveCamera","rotateVertically","radX","PlayerSubject","modelName","initialY","cameraProps","playerName","model","setY","rotateCamera","PlayerControls","directionVelocity","gravity","jumpVelocity","maxGravity","mouseSpeed","meshProps","contact","mesh","direction","velocity","raycaster","move","left","front","right","back","getMesh","noiseSphere","Number","rotateZ","ray","origin","copy","negate","intersections","intersectObject","point","onMouseMove","event","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","onKeyDown","keyCode","onKeyUp","document","addEventListener","dispose","removeEventListener","ComposerRabbit","renderer","scene","addPass","RenderPass","pixelPass","ShaderPass","PixelShader","uniforms","value","multiplyScalar","devicePixelRatio","EffectComposer","ComposerFish","bloomPass","UnrealBloomPass","afterimagePass","AfterimagePass","Scene","props","antialias","setPixelRatio","setSize","domElement","planet","background","this","sceneRef","appendChild","onResize","animationFrame","requestAnimationFrame","removeChild","child","remove","player","lights","composer","timestamp","time","render","update","ref","className","Component","defaultProps","Date","now","FrontPage","roll","bind","console","log","id","onMouseOver","App","state","pointerLock","webgl","pointerLockChange","setState","pointerLockElement","appRef","current","mozPointerLockElement","webkitPointerLockElement","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","exitPointerLock","mozExitPointerLock","webkitExitPointerLock","WebGLRenderingContext","canvas","createElement","getContext","Boolean","alerts","instructions","onClick","content","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5c8db335.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport * as chroma from \"chroma-js\";\n\nconst   moonColor = 0xE8EAF6,\n        sunColor = 0xFFF8E1,\n        dayColor = 0x90CAF9,\n        nightColor = 0x000000,\n        morningColor = 0xB2EBF2,\n        eveningColor = 0xFFCCBC;\n\nexport default class Lights extends THREE.Object3D {\n    constructor(fog, target, {distance, rotationSpeed, size}) {\n        const moonLight = new THREE.DirectionalLight(moonColor, 0.33),\n             sunLight = new THREE.DirectionalLight(sunColor, 0.67),\n            morningLight = new THREE.HemisphereLight(morningColor, nightColor, 0.33),\n            eveningLight = new THREE.HemisphereLight(eveningColor, nightColor, 0.33),\n\n            geometry = new THREE.SphereGeometry(size, 8, 6),\n            moonMaterial = new THREE.MeshBasicMaterial({color: moonColor, fog: false}),\n            sunMaterial = new THREE.MeshBasicMaterial({color: sunColor, fog: false}),\n            moon = new THREE.Mesh(geometry, moonMaterial),\n            sun = new THREE.Mesh(geometry, sunMaterial),\n\n            daytimeAngle = Math.PI / 3,\n            daytimeX = Math.cos(daytimeAngle) * distance,\n            daytimeY = Math.sin(daytimeAngle) * distance,\n\n            targetPosition = new THREE.Vector3(),\n            daytimePosition = new THREE.Vector3();\n\n        moon\n            .position\n            .set(-distance, 0, 0);\n        moonLight\n            .position\n            .set(-distance, 0, 0);\n        sun\n            .position\n            .set(distance, 0, 0);\n        sunLight\n            .position\n            .set(distance, 0, 0);\n\n        morningLight\n            .position\n            .set(daytimeX, 0, -daytimeY);\n        eveningLight\n            .position\n            .set(daytimeX, 0, daytimeY);\n\n        super();\n\n        this.add(moon);\n        this.add(moonLight);\n        this.add(sun);\n        this.add(sunLight);\n        this.add(morningLight);\n        this.add(eveningLight);\n\n        this.animate = (delta) => {\n            this.rotateY(delta * rotationSpeed);\n            sun.getWorldPosition(daytimePosition);\n            target.getWorldPosition(targetPosition);\n            const daytime = daytimePosition.angleTo(targetPosition) / Math.PI,\n                daytimeColor = chroma\n                    .mix(dayColor, nightColor, daytime)\n                    .hex();\n            fog\n                .color\n                .set(daytimeColor);\n            fog.far = targetPosition.length();\n        }\n    }\n}\n\n","import * as THREE from \"three\";\n\nconst polarLatitude = Math.sin(3 * Math.PI / 8),\n      temperateLatitude = Math.sin(2 * Math.PI / 8),\n      tropicalLatitude = Math.sin(1 * Math.PI / 8);\n\nexport const materials = [\n\n    new THREE.MeshPhongMaterial({color: 0x37474F, flatShading:true}),\n\n\tnew THREE.MeshPhongMaterial({color: 0x757575,shininess:0,flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0xA3A3A3,shininess:0,flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0xD1D1D1,shininess:0,flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0xFFFFFF,flatShading:true}),\n\n\tnew THREE.MeshPhongMaterial({color: 0xA39D8A,flatShading:true}),\n    new THREE.MeshPhongMaterial({color: 0xAFB19A,flatShading:true}),\n    new THREE.MeshPhongMaterial({color: 0xBAC4AA, flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0xC6D8BA,shininess:0,flatShading:true}),\n\n\tnew THREE.MeshPhongMaterial({color: 0xD1C49E,shininess:0,flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0xBBBE90,shininess:0,flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0xA4B882,flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0x8EB274,flatShading:true}),\n\n    new THREE.MeshPhongMaterial({color: 0xFFECB3,flatShading:true}),\n    new THREE.MeshPhongMaterial({color: 0xC6CC87, flatShading:true}),\n\tnew THREE.MeshPhongMaterial({color: 0x8EAB5B,shininess:0,flatShading:true}),\n    new THREE.MeshPhongMaterial({color: 0x558B2F,shininess:0,flatShading:true})\n];\n\nexport const applyBiomes = (geometry) => {\n\n        let normal = new THREE.Vector3();\n        let position = geometry.attributes.position;\n        let vertex = new THREE.Vector3();\n\n        for ( let i = 0; i < position.count; i +=3 ) {\n            let a = vertex.fromBufferAttribute( position, i );\n            let b = vertex.fromBufferAttribute( position, i + 1 );\n            let c = vertex.fromBufferAttribute( position, i + 2 );\n\n            let faceElevation = Math.max(a.length(), b.length(), c.length());\n            let faceNormal = normal.fromBufferAttribute( geometry.attributes.normal, i );\n\n            const  setMaterialIndex = (base) => {\n                let materialIndex = base + parseInt(faceElevation * 4, 10);\n                return Math.min(materialIndex, base + 3);\n            };\n            let latitude = Math.abs(faceNormal.y);\n\n            if (latitude > polarLatitude) {\n                geometry.addGroup(i,3,setMaterialIndex(1));\n            } else if (latitude > temperateLatitude) {\n                geometry.addGroup(i,3,setMaterialIndex(5));\n            } else if (latitude > tropicalLatitude) {\n                geometry.addGroup(i,3,setMaterialIndex(9));\n            } else {\n                geometry.addGroup(i,3,setMaterialIndex(13));\n            }\n        }\n    };\n\n\nexport const animateBiomes = (delta) => {\n    oceanMaterial.offset.x += delta / 12; \n    };\n\nexport const oceanMaterial = new THREE.MeshPhongMaterial({color: 0xA3BDD4,transparent:true, opacity: 0.8});\n\noceanMaterial.side = THREE.DoubleSide;\n\n   \n\n\n","import * as THREE from \"three\";\n\nexport const Mat = {\n\tblackMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0x100707,\n\t\tflatShading: true\n\t}),\n\n\tbrownMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0xb44b39,\n\t\tshininess:0,\n\t\tflatShading: true\n\t}),\n\n\tgreenMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0x7abf8e,\n\t\tshininess:0,\n\t\tflatShading: true\n\t}),\n\n\tpinkMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0xdc5f45,//0xb43b29,//0xff5b49,\n\t\tshininess:0,\n\t\tflatShading: true\n\t}),\n\n\tlightBrownMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0xe07a57,\n\t\tflatShading: true\n\t}),\n\n\twhiteMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0xa49789,\n\t\tflatShading: true\n\t}),\n\n\tskinMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0xff9ea5,\n\t\tflatShading: true\n\t}),\n\n\tblueMat : new THREE.MeshPhongMaterial({\n\t\tcolor: 0x5b9696,\n\t\tflatShading: true\n\t  })\n};\n\n\n\n\n","import * as THREE from \"three\";\nimport { Mat } from \"./materials\"\n\nconst randomProperty = function (obj) {\n    let keys = Object.keys(obj);\n    return obj[keys[ keys.length * Math.random() << 0]];\n};\n\nexport class Tree extends THREE.Mesh{\n    constructor(trunc) {\n    super();\n    this.add(trunc);\n}\n}\n\nexport class Trunc extends THREE.Mesh {\nconstructor(topRadius, bottomRadius, height, nhSegments, nvSegments) {\n  let matTrunc = Mat.whiteMat;\n  // Generate geometry\n  let geom = new THREE.CylinderGeometry(topRadius, bottomRadius,height, nhSegments, nvSegments);\n  geom.applyMatrix4(new THREE.Matrix4().makeTranslation(0, height / 2, 0));\n  super(geom, matTrunc);\n  this.castShadow = true;\n\n// method for adding fruit to the trunc\nthis.growFruit = (v) => {\n  // fruit parameters\n  let size = Math.random()*3;\n  let fruitGeometry = new THREE.BoxGeometry(size, size, size, 1);\n\n  let matFruit = randomProperty(Mat);\n  let fruit = new THREE.Mesh(fruitGeometry, matFruit);\n  // fruit position and direction\n  fruit.position.x = v.x;\n  fruit.position.y = v.y+3;\n  fruit.position.z = v.z;\n  fruit.rotation.x = Math.random()*Math.PI;\n  fruit.rotation.y = Math.random()*Math.PI;\n  // add this fruit to trunc mesh\n  this.add(fruit);\n}\n\n// method for adding branch to the trunc\nthis.growBranch =(v) => {\n  // branch parameters\n  let h = 3 + Math.random()*5;\n  let thickness = .2 + Math.random();\n  let branchGeometry = new THREE.CylinderGeometry(thickness / 2, thickness, h, 3, 1);\n  branchGeometry.applyMatrix4(new THREE.Matrix4().makeTranslation(0, h / 2, 0));\n  let branch = new THREE.Mesh(branchGeometry, matTrunc);\n  // branch position and direction\n  branch.position.x = v.x;\n  branch.position.y = v.y;\n  branch.position.z = v.z;\n  let vec = new THREE.Vector3(v.x, 2, v.z);\n  let axis = new THREE.Vector3(0,1,0);\n  branch.quaternion.setFromUnitVectors(axis, vec.clone().normalize());\n  // add this branch to trunc mesh\n  this.add(branch);\n}\n\n  // Generate branch and fruit\nfor (let i=0; i <geom.attributes.position.count; i++){\n    let noise = Math.random() ;\n    let v = new THREE.Vector3(); \n    v = v.fromBufferAttribute(geom.getAttribute( 'position' ),[i])\n\n    v.x += -noise + Math.random()*noise*2;\n    v.y += -noise + Math.random()*noise*2;\n    v.z += -noise + Math.random()*noise*2;\n\n    // Fruit\n    if (Math.random()>.7){\n      this.growFruit(v);\n    }\n\n    // Branch\n    if (Math.random()>.5 && v.y > 10 && v.y < this.height - 10){\n      this.growBranch(v);\n    }\n  }\n}\n}\n","import { animateBiomes, applyBiomes, materials, oceanMaterial } from './biomes';\nimport { Trunc, Tree } from \"./models\"\nimport * as THREE from \"three\";\n\nconst ImprovedNoise = function (x, y, z) {\n\n\tvar p = [ 151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,\n\t\t 23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,\n\t\t 174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,\n\t\t 133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,\n\t\t 89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,\n\t\t 202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,\n\t\t 248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,\n\t\t 178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,\n\t\t 14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,\n\t\t 93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180 ];\n\n\tfor (var i = 0; i < 256 ; i ++) {\n\n\t\tp[256 + i] = p[i];\n\n\t}\n\n\tfunction fade(t) {\n\n\t\treturn t * t * t * (t * (t * 6 - 15) + 10);\n\n\t}\n\n\tfunction lerp(t, a, b) {\n\n\t\treturn a + t * (b - a);\n\n\t}\n\n\tfunction grad(hash, x, y, z) {\n\n\t\tvar h = hash & 15;\n\t\tvar u = h < 8 ? x : y, v = h < 4 ? y : h === 12 || h === 14 ? x : z;\n\t\treturn ((h&1) === 0 ? u : -u) + ((h&2) === 0 ? v : -v);\n\n\t}\n\n\tfunction getNoise (x, y, z) {\n\n\t\tvar floorX = Math.floor(x), floorY = Math.floor(y), floorZ = Math.floor(z);\n\n\t\tvar X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;\n\n\t\tx -= floorX;\n\t\ty -= floorY;\n\t\tz -= floorZ;\n\n\t\tvar xMinus1 = x - 1, yMinus1 = y - 1, zMinus1 = z - 1;\n\n\t\tvar u = fade(x), v = fade(y), w = fade(z);\n\n\t\tvar A = p[X] + Y, AA = p[A] + Z, AB = p[A + 1] + Z, B = p[X + 1] + Y, BA = p[B] + Z, BB = p[B + 1] + Z;\n\n\t\treturn lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),\n\t\t\tgrad(p[BA], xMinus1, y, z)),\n\t\t\tlerp(u, grad(p[AB], x, yMinus1, z),\n\t\t\t\tgrad(p[BB], xMinus1, yMinus1, z))),\n\t\t\tlerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1),\n\t\t\t\tgrad(p[BA + 1], xMinus1, y, z - 1)),\n\t\t\t\tlerp(u, grad(p[AB + 1], x, yMinus1, zMinus1),\n\t\t\t\t\tgrad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\n\n\t}\n\n\treturn getNoise(x, y, z);\n};\n\nexport default class Planet extends THREE.Mesh {\n    constructor({\n        radius,\n        widthSegments,\n        heightSegments,\n        ...noiseProps\n    }) {\n        const geometry = new NoiseSphereGeometry(radius, widthSegments, heightSegments, noiseProps).toNonIndexed(),\n            biomes = applyBiomes(geometry);\n\n        const oceanGeometry = new THREE.SphereGeometry(radius, widthSegments, heightSegments),\n            ocean = new THREE.Mesh(oceanGeometry, oceanMaterial);\n\n        super(geometry, materials);\n        this.add(biomes,ocean);\n\n\t\tthis.animate = animateBiomes;\n\n\t\t\n\t\tlet nTrees = 5;\n\t\tfor(let i = 0; i < nTrees; i++){\n\t\t\tlet phi = i * (Math.PI * 2) / nTrees;\n\t\t\tfor(let j=0; j< nTrees; j++){\n\t\t\tlet theta = j* Math.PI*2 / nTrees;\n\t\t\ttheta += .25 + Math.random()*.3;\n\t\n\t\t\tlet trunc = new Trunc(\n\t\t\t1 + Math.random() * 1,\n\t\t\t3 + Math.random() * 1,\n\t\t\t25 + Math.random() * 25,\n\t\t\t3,\n\t\t\t3\n\t\t\t);\n\t\t\tlet fir = new Tree(trunc);\n\t\t\tfir.position.x = Math.sin(theta) * Math.cos(phi) * radius;\n\t\t\tfir.position.y = Math.sin(theta) * Math.sin(phi) * (radius-10);\n\t\t\tfir.position.z = Math.cos(theta) * radius;\n\t\n\t\t\tlet vec = fir.position.clone();\n\t\t\tlet axis = new THREE.Vector3(0, 1, 0);\n\t\t\tfir.quaternion.setFromUnitVectors(axis, vec.clone().normalize());\n\t\t\t\n\t\t\tthis.add(fir);\n\t\t}\n\t\t}\n\t\t  \n\t\t\n    }\n}\n\nclass NoiseSphereGeometry extends THREE.SphereGeometry {\n    constructor(radius, widthSegments, heightSegments, {seed, noiseWidth, noiseHeight}) {\n        super(radius, widthSegments, heightSegments);\n        let positions = this.attributes.position;\n        let vertex = new THREE.Vector3();\n        let newVertex = [];\n\n\t\tconst getNoise = (vertice) => ImprovedNoise(\n\t\t\tseed + vertice.x / noiseWidth,\n\t\t\tseed + vertice.y / noiseWidth,\n\t\t\tseed + vertice.z / noiseWidth\n\t\t);\n\n\t\tlet noiseMax = 0, noiseMin = 0;\n\t\tlet noise = [];\n\n\t\tfor ( let i = 0, l = positions.count; i < l; i ++ ) {\n\t\t\tlet vertice = vertex.fromBufferAttribute( positions, i );\n\t\t\tnoise.push(getNoise(vertice));\n\t\t}\n\t\tnoiseMax = Math.max(...noise);\n\t\tnoiseMin = -Math.min(...noise);\n\n\t\tlet elevation;\n\t\tfor ( let i = 0, l = positions.count; i < l; i ++ ) {\n\t\t\tlet vertice = vertex.fromBufferAttribute( positions, i );\n\n\t\t\tlet noiseN = getNoise(vertice);\n\n\t\t\tif(noiseN > 0) {\n\t\t\t\televation = noiseN / noiseMax\n\t\t\t} else if(noiseN < 0) {\n\t\t\t\televation = noiseN / noiseMin\n\t\t\t} else if (noiseN === 0) {\n\t\t\t\televation = 0;\n\t\t\t}\n\t\t\tvertice = vertice.setLength(elevation + radius)\n\t\t\tlet scalar = 1+ elevation * noiseHeight / radius;\n\n\t\t\tnewVertex.push(vertice.x*scalar);\n\t\t\tnewVertex.push(vertice.y*scalar);\n\t\t\tnewVertex.push(vertice.z*scalar);\n\t\t}\n\n\t\t// set the new vertices with noise back to this (SphereGeometry)\n\t\tthis.setAttribute( 'position', new THREE.BufferAttribute(new Float32Array(newVertex), 3));\n\t}\n}\n\n","import * as THREE from \"three\";\nimport { Mat } from \"./materials\"\nimport { TWEEN } from 'three/examples/jsm/libs/tween.module.min'\n\nexport class Rabbit extends THREE.Group {\n\tconstructor(){\n\t\tsuper();\n\n\t\tthis.status = \"running\";\n\t\tthis.runningCycle = 0;\n\t\tthis.body = new THREE.Group();\n\t\tthis.add(this.body);\n\n\t\tlet speed = 6;\n\t\tlet totalSpeed = 10 / speed;\n\t\tlet jumpHeight = 10;\n\n\t\tlet torsoGeom = new THREE.BoxGeometry(7, 7, 10, 1);\n\n\t\tthis.torso = new THREE.Mesh(torsoGeom, Mat.brownMat);\n\t\tthis.torso.position.z = 0;\n\t\tthis.torso.position.y = 7;\n\t\tthis.torso.castShadow = true;\n\t\tthis.body.add(this.torso);\n\n\t\tlet pantsGeom = new THREE.BoxGeometry(9, 9, 5, 1);\n\t\tthis.pants = new THREE.Mesh(pantsGeom, Mat.whiteMat);\n\t\tthis.pants.position.z = -3;\n\t\tthis.pants.position.y = 0;\n\t\tthis.pants.castShadow = true;\n\t\tthis.torso.add(this.pants);\n\n\t\tlet tailGeom = new THREE.BoxGeometry(3, 3, 3, 1);\n\t\ttailGeom.applyMatrix4(new THREE.Matrix4().makeTranslation(0,0,-2));\n\t\tthis.tail = new THREE.Mesh(tailGeom, Mat.lightBrownMat);\n\t\tthis.tail.position.z = -4;\n\t\tthis.tail.position.y = 5;\n\t\tthis.tail.castShadow = true;\n\t\tthis.torso.add(this.tail);\n\n\t\tthis.torso.rotation.x = -Math.PI/8;\n\n\t\tlet headGeom = new THREE.BoxGeometry(10, 10, 13, 1);\n\n\t\theadGeom.applyMatrix4(new THREE.Matrix4().makeTranslation(0,0,7.5));\n\t\tthis.head = new THREE.Mesh(headGeom, Mat.brownMat);\n\t\tthis.head.position.z = 2;\n\t\tthis.head.position.y = 11;\n\t\tthis.head.castShadow = true;\n\t\tthis.body.add(this.head);\n\n\t\tlet cheekGeom = new THREE.BoxGeometry(1, 4, 4, 1);\n\t\tthis.cheekR = new THREE.Mesh(cheekGeom, Mat.pinkMat);\n\t\tthis.cheekR.position.x = -5;\n\t\tthis.cheekR.position.z = 7;\n\t\tthis.cheekR.position.y = -2.5;\n\t\tthis.cheekR.castShadow = true;\n\t\tthis.head.add(this.cheekR);\n\n\t\tthis.cheekL = this.cheekR.clone();\n\t\tthis.cheekL.position.x = - this.cheekR.position.x;\n\t\tthis.head.add(this.cheekL);\n\n\n\t\tlet noseGeom = new THREE.BoxGeometry(6, 6, 3, 1);\n\t\tthis.nose = new THREE.Mesh(noseGeom, Mat.LightBrownMat);\n\t\tthis.nose.position.z = 13.5;\n\t\tthis.nose.position.y = 2.6;\n\t\tthis.nose.castShadow = true;\n\t\tthis.head.add(this.nose);\n\n\t\tlet mouthGeom = new THREE.BoxGeometry(4, 2, 4, 1);\n\t\tmouthGeom.applyMatrix4(new THREE.Matrix4().makeTranslation(0,0,3));\n\t\tmouthGeom.applyMatrix4(new THREE.Matrix4().makeRotationX(Math.PI/12));\n\t\tthis.mouth = new THREE.Mesh(mouthGeom, Mat.brownMat);\n\t\tthis.mouth.position.z = 8;\n\t\tthis.mouth.position.y = -4;\n\t\tthis.mouth.castShadow = true;\n\t\tthis.head.add(this.mouth);\n\n\n\t\tlet pawFGeom = new THREE.BoxGeometry(3,3,3, 1);\n\t\tthis.pawFR = new THREE.Mesh(pawFGeom, Mat.lightBrownMat);\n\t\tthis.pawFR.position.x = -2;\n\t\tthis.pawFR.position.z = 6;\n\t\tthis.pawFR.position.y = 1.5;\n\t\tthis.pawFR.castShadow = true;\n\t\tthis.body.add(this.pawFR);\n\n\t\tthis.pawFL = this.pawFR.clone();\n\t\tthis.pawFL.position.x = - this.pawFR.position.x;\n\t\tthis.pawFL.castShadow = true;\n\t\tthis.body.add(this.pawFL);\n\n\t\tlet pawBGeom = new THREE.BoxGeometry(3,3,6, 1);\n\t\tthis.pawBL = new THREE.Mesh(pawBGeom, Mat.lightBrownMat);\n\t\tthis.pawBL.position.y = 1.5;\n\t\tthis.pawBL.position.z = 0;\n\t\tthis.pawBL.position.x = 5;\n\t\tthis.pawBL.castShadow = true;\n\t\tthis.body.add(this.pawBL);\n\n\t\tthis.pawBR = this.pawBL.clone();\n\t\tthis.pawBR.position.x = - this.pawBL.position.x;\n\t\tthis.pawBR.castShadow = true;\n\t\tthis.body.add(this.pawBR);\n\n\t\tlet earGeom = new THREE.BoxGeometry(7, 18, 2, 1);\n\t\tearGeom.applyMatrix4(new THREE.Matrix4().makeTranslation(0,9,0));\n\n\t\tthis.earL = new THREE.Mesh(earGeom, Mat.brownMat);\n\t\tthis.earL.position.x = 2;\n\t\tthis.earL.position.z = 2.5;\n\t\tthis.earL.position.y = 5;\n\t\tthis.earL.rotation.z = -Math.PI/12;\n\t\tthis.earL.castShadow = true;\n\t\tthis.head.add(this.earL);\n\n\t\tthis.earR = this.earL.clone();\n\t\tthis.earR.position.x = -this.earL.position.x;\n\t\tthis.earR.rotation.z = -this.earL.rotation.z;\n\t\tthis.earR.castShadow = true;\n\t\tthis.head.add(this.earR);\n\n\t\tlet eyeGeom = new THREE.BoxGeometry(2,4,4);\n\n\t\tthis.eyeL = new THREE.Mesh(eyeGeom, Mat.whiteMat);\n\t\tthis.eyeL.position.x = 5;\n\t\tthis.eyeL.position.z = 5.5;\n\t\tthis.eyeL.position.y = 2.9;\n\t\tthis.eyeL.castShadow = true;\n\t\tthis.head.add(this.eyeL);\n\n\t\tlet irisGeom = new THREE.BoxGeometry(.6,2,2);\n\n\t\tthis.iris = new THREE.Mesh(irisGeom, Mat.blackMat);\n\t\tthis.iris.position.x = 1.2;\n\t\tthis.iris.position.y = 1;\n\t\tthis.iris.position.z = 1;\n\t\tthis.eyeL.add(this.iris);\n\n\t\tthis.eyeR = this.eyeL.clone();\n\t\tthis.eyeR.children[0].position.x = -this.iris.position.x;\n\n\n\t\tthis.eyeR.position.x = -this.eyeL.position.x;\n\t\tthis.head.add(this.eyeR);\n\t\tthis.body.scale.set(0.2,0.2,0.2);\n\n\t\tthis.body.traverse(function(object) {\n\t\t\tif (object instanceof THREE.Mesh) {\n\t\t\t\tobject.castShadow = true;\n\t\t\t\tobject.receiveShadow = true;\n\t\t\t}\n\t\t});\n\n\t\tthis.run = (delta)=>{\n\t\t\tthis.status = \"running\";\n\n\t\t\tthis.runningCycle += delta * speed * .7;\n\t\t\tthis.runningCycle = this.runningCycle % (Math.PI*2);\n\t\t\tlet t = this.runningCycle;\n\n\t\t\tconst amp = 4;\n\t\t\tconst disp = .2;\n\n\t\t\t// // BODY\n\n\t\t\tthis.body.position.y = Math.sin(t - Math.PI/2)*amp;\n\t\t\tthis.body.rotation.x = .2 + Math.sin(t - Math.PI/2)*amp*.1;\n\n\t\t\tthis.torso.rotation.x =  Math.sin(t - Math.PI/2)*amp*.1;\n\t\t\tthis.torso.position.y =  7 + Math.sin(t - Math.PI/2)*amp*.5;\n\n\t\t\t// MOUTH\n\t\t\tthis.mouth.rotation.x = Math.PI/16 + Math.cos(t)*amp*.05;\n\n\t\t\t// HEAD\n\t\t\tthis.head.position.z = 2 + Math.sin(t - Math.PI/2)*amp*.5;\n\t\t\tthis.head.position.y = 8 + Math.cos(t - Math.PI/2)*amp*.7;\n\t\t\tthis.head.rotation.x = -.2 + Math.sin(t + Math.PI)*amp*.1;\n\n\t\t\t// EARS\n\t\t\tthis.earL.rotation.x = Math.cos(-Math.PI/2 + t)*(amp*.2);\n\t\t\tthis.earR.rotation.x = Math.cos(-Math.PI/2 + .2 + t)*(amp*.3);\n\n\t\t\t// EYES\n\t\t\tthis.eyeR.scale.y = this.eyeL.scale.y = .7 +  Math.abs(Math.cos(-Math.PI/4 + t*.5))*.6;\n\n\t\t\t// TAIL\n\t\t\tthis.tail.rotation.x = Math.cos(Math.PI/2 + t)*amp*.3;\n\n\t\t\t// FRONT RIGHT PAW\n\t\t\tthis.pawFR.position.y = 1.5 + Math.sin(t)*amp;\n\t\t\tthis.pawFR.rotation.x = Math.cos(t ) * Math.PI/4;\n\t\t\tthis.pawFR.position.z = 6 - Math.cos(t)*amp*2;\n\n\t\t\t// FRONT LEFT PAW\n\n\t\t\tthis.pawFL.position.y = 1.5 + Math.sin(disp + t)*amp;\n\t\t\tthis.pawFL.rotation.x = Math.cos( t ) * Math.PI/4;\n\t\t\tthis.pawFL.position.z = 6 - Math.cos(disp+t)*amp*2;\n\n\t\t\t// BACK RIGHT PAW\n\t\t\tthis.pawBR.position.y = 1.5 + Math.sin(Math.PI + t)*amp;\n\t\t\tthis.pawBR.rotation.x = Math.cos(t + Math.PI*1.5) * Math.PI/3;\n\n\n\t\t\tthis.pawBR.position.z = - Math.cos(Math.PI + t)*amp;\n\n\t\t\t// BACK LEFT PAW\n\t\t\tthis.pawBL.position.y = 1.5 + Math.sin(Math.PI + t)*amp;\n\t\t\tthis.pawBL.rotation.x = Math.cos(t + Math.PI *1.5) * Math.PI/3;\n\t\t\tthis.pawBL.position.z = - Math.cos(Math.PI + t)*amp;\n\n\t\t\t\n\t\t}\n\n\t\tthis.jump = () => {\n\t\t\tthis.status = \"jumping\";\n\n\t\t\tnew TWEEN.Tween(this.earL.rotation).to({x:\"+=.3\"},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\t\t\tnew TWEEN.Tween(this.earR.rotation).to({x:\"+=.3\"},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\t\t\tnew TWEEN.Tween(this.pawFL.rotation).to({x:\"+=.7\"},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\t\t\tnew TWEEN.Tween(this.pawFR.rotation).to({x:\"-=.7\"},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\t\t\tnew TWEEN.Tween(this.pawBL.rotation).to({x:\"+=.7\"},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\t\t\tnew TWEEN.Tween(this.pawBR.rotation).to({x:\"-=.7\"},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\n\t\t\tnew TWEEN.Tween(this.tail.rotation).to({x:\"+=1\"},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\t\t\tnew TWEEN.Tween(this.mouth.rotation).to({x:.5},totalSpeed).easing(TWEEN.Easing.Back.Out).start();\n\n\t\t\tnew TWEEN.Tween(this.body.position).to({y:this.body.position.y+jumpHeight},500).easing(TWEEN.Easing.Elastic.Out).start();\n\t\t\tnew TWEEN.Tween(this.body.position).to({y:'0'},500).delay(500).easing(TWEEN.Easing.Elastic.In).start()\n\t\t\t\n\t\t  }\n\t}\n}\n\nexport class Fish extends THREE.Group {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.runningCycle = 0;\n\t\tthis.body = new THREE.Group();\n\t\tthis.add(this.body);\n\n\t\tlet fishFastColor = {r:255, g:225, b:225}; \n\t\tlet fishSlowColor = {r:0, g:0, b:0}; \n\t\tlet speed = 3;\n\t\n\t// Body \n\tlet bodyGeom = new THREE.BoxGeometry(120, 120, 120);\n\tlet bodyMat = new THREE.MeshLambertMaterial({\n\t   color: 0x80f5fe ,\n\t });\n\t this.bodyFish = new THREE.Mesh(bodyGeom, bodyMat);\n\t this.body.add(this.bodyFish);\n\t \n\t // Tail\n\tlet tailGeom = new THREE.CylinderGeometry(0, 60, 60, 4, false);\n\tlet tailMat = new THREE.MeshLambertMaterial({\n\t   color: 0xff00dc,\n\t });\n\t \n\t this.tailFish = new THREE.Mesh(tailGeom, tailMat);\n\t this.tailFish.scale.set(.8,1,.1);\n\t this.tailFish.position.x = -60; \n\t this.tailFish.rotation.z = -Math.PI/2;\n\t this.body.add(this.tailFish)\n\t \n\t // Lips\n\t let lipsGeom = new THREE.BoxGeometry(25, 10, 120);\n\t let lipsMat = new THREE.MeshLambertMaterial({\n\t   color: 0x80f5fe\n\t });\n\t this.lipsFish = new THREE.Mesh(lipsGeom, lipsMat);\n\t this.lipsFish.position.x = 65;\n\t this.lipsFish.position.y = -47;\n\t this.lipsFish.rotation.z = Math.PI/2;\n\t this.body.add(this.lipsFish);\n\t \n\t // Fins\n\t this.topFish = new THREE.Mesh(tailGeom, tailMat);\n\t this.topFish.scale.set(.8,1,.1);\n\t this.topFish.position.x = -20; \n\t this.topFish.position.y = 60; \n\t this.topFish.rotation.z = -Math.PI/2;\n\t \n\t this.sideRightFish = new THREE.Mesh(tailGeom, tailMat);\n\t this.sideRightFish.scale.set(.8,1,.1);\n\t this.sideRightFish.rotation.x = Math.PI/2;\n\t this.sideRightFish.rotation.z = -Math.PI/2;\n\t this.sideRightFish.position.x = 0; \n\t this.sideRightFish.position.y = -50; \n\t this.sideRightFish.position.z = -60; \n\t \n\t this.sideLeftFish = new THREE.Mesh(tailGeom, tailMat);\n\t this.sideLeftFish.scale.set(.8,1,.1);\n\t this.sideLeftFish.rotation.x = Math.PI/2;\n\t this.sideLeftFish.rotation.z = -Math.PI/2;\n\t this.sideLeftFish.position.x = 0; \n\t this.sideLeftFish.position.y = -50; \n\t this.sideLeftFish.position.z = 60; \n\n\t this.body.add(this.topFish,this.sideLeftFish,this.sideRightFish);\n\t \n\t // Eyes\n\t let eyeGeom = new THREE.BoxGeometry(40, 40,5);\n\t let eyeMat = new THREE.MeshLambertMaterial({\n\t   color: 0xffffff\n\t });\n\t \n\t this.rightEye = new THREE.Mesh(eyeGeom,eyeMat );\n\t this.rightEye.position.z = -60;\n\t this.rightEye.position.x = 25;\n\t this.rightEye.position.y = -10;\n\t \n\t let irisGeom = new THREE.BoxGeometry(10, 10,3);\n\t let irisMat = new THREE.MeshLambertMaterial({\n\t   color: 0x330000\n\t });\n\t \n\t this.rightIris = new THREE.Mesh(irisGeom,irisMat );\n\t this.rightIris.position.z = -65;\n\t this.rightIris.position.x = 35;\n\t this.rightIris.position.y = -10;\n\t \n\t this.leftEye = new THREE.Mesh(eyeGeom,eyeMat );\n\t this.leftEye.position.z = 60;\n\t this.leftEye.position.x = 25;\n\t this.leftEye.position.y = -10;\n\t \n\t this.leftIris = new THREE.Mesh(irisGeom,irisMat );\n\t this.leftIris.position.z = 65;\n\t this.leftIris.position.x = 35;\n\t this.leftIris.position.y = -10;\n\n\t this.body.add(this.rightEye,this.leftEye,this.leftIris,this.rightIris)\n\t   \n\t let toothGeom = new THREE.BoxGeometry(20, 4, 20);\n\t let toothMat = new THREE.MeshLambertMaterial({\n\t   color: 0xffffff\n\t });\n\t \n\t // Teeth\n\t this.tooth1 = new THREE.Mesh(toothGeom,toothMat);\n\t this.tooth1.position.x = 65;\n\t this.tooth1.position.y = -35;\n\t this.tooth1.position.z = -50;\n\t this.tooth1.rotation.z = Math.PI/2;\n\t this.tooth1.rotation.x = -Math.PI/2;\n\t \n\t this.tooth2 = new THREE.Mesh(toothGeom,toothMat);\n\t this.tooth2.position.x = 65;\n\t this.tooth2.position.y = -30;\n\t this.tooth2.position.z = -25;\n\t this.tooth2.rotation.z = Math.PI/2;\n\t this.tooth2.rotation.x = -Math.PI/12;\n\t \n\t this.tooth3 = new THREE.Mesh(toothGeom,toothMat);\n\t this.tooth3.position.x = 65;\n\t this.tooth3.position.y = -25;\n\t this.tooth3.position.z = 0;\n\t this.tooth3.rotation.z = Math.PI/2;\n\t \n\t this.tooth4 = new THREE.Mesh(toothGeom,toothMat);\n\t this.tooth4.position.x = 65;\n\t this.tooth4.position.y = -30;\n\t this.tooth4.position.z = 25;\n\t this.tooth4.rotation.z = Math.PI/2;\n\t this.tooth4.rotation.x = Math.PI/12;\n\t \n\t this.tooth5 = new THREE.Mesh(toothGeom,toothMat);\n\t this.tooth5.position.x = 65;\n\t this.tooth5.position.y = -35;\n\t this.tooth5.position.z = 50;\n\t this.tooth5.rotation.z = Math.PI/2;\n\t this.tooth5.rotation.x = Math.PI/8;\n\t \n\t this.body.add(this.tooth1,this.tooth2,this.tooth3,this.tooth4,this.tooth5);\n\n\t this.body.rotation.y = -Math.PI/4;\n\t this.body.rotation.y = -Math.PI/4;\n\t this.body.scale.set(0.05,0.05,0.05);\n\t this.body.rotateY(Math.PI*0.6);\n\n\n\t this.body.traverse(function(object) {\n\t\tif (object instanceof THREE.Mesh) {\n\t\t\tobject.castShadow = true;\n\t\t\tobject.receiveShadow = true;\n\t\t}\n\t});\n\n\t\n\t this.run = (delta)=>{\n\t\tthis.status = \"running\";\n\n\t\tthis.runningCycle += delta * speed * .7;\n\t\tthis.runningCycle = this.runningCycle % (Math.PI*2);\n\t\tlet t = this.runningCycle;\n\t\tthis.body.position.y = 10;\n\n\t\tnew TWEEN.Tween(this.tailFish.rotation).to({y:Math.cos(t)*.5},300).easing(TWEEN.Easing.Back.Out).start();\n\t\tnew TWEEN.Tween(this.topFish.rotation).to({x:Math.sin(t/5)*.5},300).easing(TWEEN.Easing.Back.Out).start();\n\t\tnew TWEEN.Tween(this.sideRightFish.rotation).to({x:Math.PI/2 + Math.sin(t/5)*.2},300).easing(TWEEN.Easing.Back.Out).start();\n\t\tnew TWEEN.Tween(this.sideLeftFish.rotation).to({x:Math.PI/2 + Math.sin(t/5)*.2},300).easing(TWEEN.Easing.Back.Out).start();\n\n\t\tconst rvalue = (fishSlowColor.r + (fishFastColor.r - fishSlowColor.r)*t/5)/255;\n\t\tconst gvalue = (fishSlowColor.g + (fishFastColor.g - fishSlowColor.g)*t/5)/255;\n\t\tconst bvalue = (fishSlowColor.b + (fishFastColor.b - fishSlowColor.b)*t/5)/255;\n\n\t\tthis.bodyFish.material.color.setRGB(rvalue,gvalue,gvalue);\n\t\tthis.lipsFish.material.color.setRGB(rvalue,gvalue,bvalue);\n\n\t\tnew TWEEN.Tween(this.bodyFish.material.color).to({r:rvalue,g:gvalue,b:gvalue},5000).easing(TWEEN.Easing.Back.Out).start();\n\t\tnew TWEEN.Tween(this.lipsFish.material.color).to({r:rvalue,g:gvalue,b:bvalue},1000).easing(TWEEN.Easing.Back.Out).start();\n\n\t }\n\n\t this.jump = () => {\n\t\tthis.status = \"jumping\";\n\t\tlet jumpHeight = 25;\n\n\t\tnew TWEEN.Tween(this.body.position).to({y:this.body.position.y+jumpHeight},300).easing(TWEEN.Easing.Bounce.Out).start();\n\t\tnew TWEEN.Tween(this.body.scale).to({y:0.01,z:0.01},300).easing(TWEEN.Easing.Bounce.Out).start();\n\t\t\n\t\tnew TWEEN.Tween(this.body.position).to({y:'0'},300).delay(300).easing(TWEEN.Easing.Bounce.In).start();\n\t\tnew TWEEN.Tween(this.body.scale).to({y:0.05,z:0.05},300).delay(300).easing(TWEEN.Easing.Bounce.In).start();\n\t}\n\t }\n}\n\nexport class Hero extends THREE.Group {\n\tconstructor(){\n\t\tsuper();\n\n\t\tthis.status = \"running\";\n\t\tthis.runningCycle = 0;\n\t\tthis.body = new THREE.Group();\n\t\tthis.add(this.body);\n\n\t\tlet speed = 4;\n\n\t\tlet torsoGeom = new THREE.BoxGeometry(8, 8, 8, 1);\n\n\t\tthis.torso = new THREE.Mesh(torsoGeom, Mat.blueMat);\n\t\tthis.torso.position.y = 8;\n\t\tthis.torso.castShadow = true;\n\t\tthis.body.add(this.torso);\n\n\t\tlet handGeom = new THREE.BoxGeometry(3,3,3,1);\n\t\tthis.handR = new THREE.Mesh(handGeom, Mat.brownMat);\n\t\tthis.handR.position.z=7;\n\t\tthis.handR.position.y=8;\n\t\tthis.body.add(this.handR);\n\n\t\tthis.handL = this.handR.clone();\n\t\tthis.handL.position.z = - this.handR.position.z;\n\t\tthis.body.add(this.handL);\n\n\t\tlet headGeom = new THREE.BoxGeometry(16,16,16, 1);\n\t\tthis.head = new THREE.Mesh(headGeom, Mat.blueMat);\n\t\tthis.head.position.y = 21;\n\t\tthis.head.castShadow = true;\n\t\tthis.body.add(this.head);\n\n\t\tlet legGeom = new THREE.BoxGeometry(8,3,5, 1);\n\n\t\tthis.legR = new THREE.Mesh(legGeom, Mat.brownMat);\n\t\tthis.legR.position.x = 0;\n\t\tthis.legR.position.z = 7;\n\t\tthis.legR.position.y = 0;\n\t\tthis.legR.castShadow = true;\n\t\tthis.body.add(this.legR);\n\n\t\tthis.legL = this.legR.clone();\n\t\tthis.legL.position.z = - this.legR.position.z;\n\t\tthis.legL.castShadow = true;\n\t\tthis.body.add(this.legL);\n\t\tthis.body.scale.set(0.25,0.25,0.25);\n\t\tthis.body.rotateY(Math.PI*0.8);\n\n\n\t\tthis.run = (delta)=>{\n\t\t\tthis.status = \"running\";\n\n\t\t\tthis.runningCycle += delta * speed * .7;\n\t\t\tthis.runningCycle = this.runningCycle % (Math.PI*2);\n\t\t\tlet t = this.runningCycle;\n\n\t\t\tconst amp = 4;\n\n\t\t\tthis.legR.position.x =  Math.cos(t) * amp;\n\t\t\tthis.legR.position.y = Math.max (0, - Math.sin(t) * amp);  \n\t\t\t\n\t\t\tthis.legL.position.x =  Math.cos(t + Math.PI) * amp;\n\t\t\tthis.legL.position.y = Math.max(0, - Math.sin(t + Math.PI) * amp);\n\n\t\t\t// this.body.position.y = 0.5 * Math.sin(t - Math.PI/2)*amp;//\n\t\t\t\n\t\t\tthis.torso.position.y = 8 - Math.cos(t * 2 ) * amp * .2;\n\t\t\tthis.torso.rotation.y = -Math.cos(t + Math.PI ) * amp * .05;\n\t\t\t\n\t\t\tthis.head.position.y = 21 - Math.cos( t * 2 ) * amp * .3;\n\t\t\tthis.head.rotation.x = Math.cos( t ) * amp * .02;\n\t\t\tthis.head.rotation.y =  Math.cos( t ) * amp * .01;\n\t\t  \n\t\t\tthis.handR.position.x = -Math.cos( t ) * amp;\n\t\t\tthis.handR.rotation.z = -Math.cos( t ) * Math.PI/8;\n\t\t\tthis.handL.position.x = -Math.cos( t + Math.PI) * amp;\n\t\t\tthis.handL.rotation.z = -Math.cos( t + Math.PI) * Math.PI/8;\n\t\t}\n\n\t\tthis.jump = () => {\n\t\t\tthis.status = \"jumping\";\n\t\t\tlet jumpHeight = 15;\n\n\t\t\tnew TWEEN.Tween(this.body.position).to({y:this.body.position.y+jumpHeight},300).easing(TWEEN.Easing.Quadratic.Out).start();\n\t\t\tnew TWEEN.Tween(this.body.position).to({y:'0'},300).delay(300).easing(TWEEN.Easing.Quadratic.In).start()\n\t\t  }\n\t}\n}","import * as THREE from \"three\";\nimport {Rabbit, Fish, Hero} from \"./hero\";\n\n\nclass PlayerCamera extends THREE.Object3D {\n    // Third Person Camera\n    constructor({\n        distance,\n        far,\n        fov\n    }, height) {\n        const camera = new THREE.PerspectiveCamera(fov, window.innerWidth / window.innerHeight, 1, far);\n        super();\n\n        camera.translateZ(distance);\n        this.add(camera);\n        this.translateY(height);\n        this.rotateX(-Math.PI / 4);\n\n        this.getPerspectiveCamera = () => camera;\n        this.rotateVertically = (radX) => {\n            const min = Math.min(Math.PI / 2, this.rotation.x + radX);\n            this.rotation.x = Math.max(-Math.PI / 2, min);\n        };\n    }\n}\n\nclass PlayerSubject extends THREE.Mesh {\n    constructor({\n        modelName,\n        height,\n        initialY,\n        playerName,\n        ...cameraProps\n    }) {\n        super();\n        // Add rabbit as the player\n        switch (modelName) {\n            case 'Rabbit':\n                this.model = new Rabbit();\n                break;\n            case 'Hero':\n                this.model = new Hero();\n                break;\n            case 'Fish':\n                this.model = new Fish();\n                break;\n            default:\n                this.model = new Hero();\n                break;\n        }\n        this.add(this.model);\n\n        // Add camera\n        const camera = new PlayerCamera(cameraProps, height);\n        this.add(camera);\n        this\n            .position\n            .setY(initialY);\n\n        this.getPerspectiveCamera = camera.getPerspectiveCamera;\n        this.rotateCamera = camera.rotateVertically;\n    }\n}\n\nexport default class PlayerControls extends THREE.Object3D {\n    constructor({\n        directionVelocity,\n        gravity,\n        jumpVelocity,\n        maxGravity,\n        mouseSpeed,\n        ...meshProps\n    }) {\n        let contact = false;\n        const mesh = new PlayerSubject(meshProps),\n            direction = new THREE.Vector3(),\n            velocity = new THREE.Vector3(),\n            raycaster = new THREE.Raycaster(),\n            move = {\n                left: false,\n                front: false,\n                right: false,\n                back: false,\n                jump: false\n            };\n\n        super();\n\n        this.add(mesh);\n\n        this.getPerspectiveCamera = mesh.getPerspectiveCamera;\n        this.getMesh = () => mesh;\n        this.animate = (delta, noiseSphere) => {\n            // Run Rabbit\n            this.getMesh().model.run(delta);\n            // Jump Rabbit\n            if(move.jump === true){\n            this.getMesh().model.jump() ;\n            }\n            // Set Velocity\n            direction.set(Number(move.left) - Number(move.right), 0, Number(move.back) - Number(move.front));\n            direction.normalize();\n            velocity.x = direction.x * directionVelocity * delta;\n            velocity.z = direction.z * directionVelocity * delta;\n            if (contact) {\n                velocity.y = Number(move.jump) * jumpVelocity - gravity * delta;\n            } else {\n                velocity.y = Math.max(-maxGravity * delta, velocity.y - gravity * delta);\n                \n            }\n            // Apply Rotation\n            this.rotateX(velocity.z * Math.PI / 128);\n            this.rotateZ(velocity.x * Math.PI / 128);\n            // Intersection Altitude\n            mesh.getWorldPosition(raycaster.ray.origin);\n            raycaster\n                .ray\n                .origin\n                .setLength(mesh.position.y * 2);\n            raycaster\n                .ray\n                .direction\n                .copy(raycaster.ray.origin)\n                .negate()\n                .normalize();\n            const intersections = raycaster.intersectObject(noiseSphere, false);\n            if (intersections.length > 0) {\n                const length = intersections[0]\n                    .point\n                    .length();\n                // Apply Contact\n                mesh.translateY(velocity.y);\n                if (mesh.position.y <= length) {\n                    mesh\n                        .position\n                        .setY(length);\n                    contact = true;\n                } else {\n                    contact = false;\n                }\n            }\n        };\n\n        // Events\n        const onMouseMove = (event) => {\n                const movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0,\n                    movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n                mesh.rotateCamera(-movementY * mouseSpeed);\n                this.rotateY(-movementX * mouseSpeed);\n            },\n            onKeyDown = ({keyCode}) => {\n                switch (keyCode) {\n                    case 32: // space\n                        move.jump = true;\n                        break;\n                    case 37: // left\n                    case 65: // a\n                        move.left = true;\n                        break;\n                    case 38: // up\n                    case 87: // w\n                        move.front = true;\n                        break;\n                    case 39: // right\n                    case 68: // d\n                        move.right = true;\n                        break;\n                    case 40: // down\n                    case 83: // s\n                        move.back = true;\n                        break;\n                    // case 88: // x\n                    //     playerSwich;\n                    //     break;    \n                    default:\n                        break;\n                }\n            },\n            onKeyUp = ({keyCode}) => {\n                switch (keyCode) {\n                    case 32: // space\n                        move.jump = false;\n                        break;\n                    case 37: // left\n                    case 65: // a\n                        move.left = false;\n                        break;\n                    case 38: // up\n                    case 87: // w\n                        move.front = false;\n                        break;\n                    case 39: // right\n                    case 68: // d\n                        move.right = false;\n                        break;\n                    case 40: // down\n                    case 83: // s\n                        move.back = false;\n                        break;\n                    default:\n                        break;\n                }\n            };\n        document.addEventListener('keydown', onKeyDown, false);\n        document.addEventListener('keyup', onKeyUp, false);\n        document.addEventListener('mousemove', onMouseMove, false);\n        this.dispose = () => {\n            document.removeEventListener('keydown', onKeyDown, false);\n            document.removeEventListener('keyup', onKeyUp, false);\n            document.removeEventListener('mousemove', onMouseMove, false);\n        };\n    }\n}\n\n","import * as THREE from \"three\";\n\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport { AfterimagePass } from 'three/examples/jsm/postprocessing/AfterimagePass.js';\nimport { PixelShader } from 'three/examples/jsm/shaders/PixelShader.js';\n\nexport class ComposerRabbit extends EffectComposer{\n\tconstructor(renderer, scene, camera){\n\t\tsuper(renderer);\n\t\tthis.addPass( new RenderPass( scene, camera ) );\n\t\tconst pixelPass = new ShaderPass( PixelShader );\n\t\tpixelPass.uniforms[ \"resolution\" ].value = new THREE.Vector2( window.innerWidth, window.innerHeight );\n\t\tpixelPass.uniforms[ \"resolution\" ].value.multiplyScalar( window.devicePixelRatio );\n\t\tpixelPass.uniforms[ \"pixelSize\" ].value = 12;\n\t\tthis.addPass( pixelPass );\n\t}\n}\n\nexport class ComposerSnake extends EffectComposer{\n\tconstructor(renderer, scene, camera){\n\t\tsuper(renderer);\n\t\tconst ssaoPass = new SSAOPass( scene, camera, window.innerWidth, window.innerHeight);\n\t\tssaoPass.kernelRadius = 100;\n\t\tthis.addPass( ssaoPass );\n\t\tssaoPass.output = SSAOPass.OUTPUT.SSAO;\n\t\tssaoPass.minDistance = 0;\n\t}\n}\n\nexport class ComposerFish extends EffectComposer{\n\tconstructor(renderer, scene, camera){\n\t\tsuper(renderer);\n\t\tconst bloomPass = new UnrealBloomPass( new THREE.Vector2( window.innerWidth, window.innerHeight ), 0.3, 0.1, 0 );\n\t\tconst afterimagePass = new AfterimagePass();\n\t\tafterimagePass.value = 0.5;\n\t\tthis.addPass( new RenderPass( scene, camera ) );\n\t\tthis.addPass( bloomPass );\n\t\tthis.addPass( afterimagePass );\n\t}\n}","import React, { Component } from 'react';\n\nimport Lights from './scene/lights';\nimport Planet from './scene/planet';\nimport PlayerControls from './scene/player';\nimport PropTypes from 'prop-types';\nimport {ComposerRabbit, ComposerSnake, ComposerFish} from \"./scene/composer\";\nimport { TWEEN } from 'three/examples/jsm/libs/tween.module.min.js'\n\nimport * as THREE from \"three\";\n\nexport class Scene extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // scene\n        this.scene = new THREE.Scene();\n        this.renderer = new THREE.WebGLRenderer( { antialias: true } );\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.domElement = this.renderer.domElement;\n\n        // planet\n        this.planet = new Planet(this.props.planet);\n        this.scene.add(this.planet);\n\n        // fog and lights\n        this.scene.fog = new THREE.Fog();\n        this.scene.background = this.scene.fog.color;\n    }\n\n    componentDidMount(){\n        this.sceneRef\n            .appendChild(this.domElement);\n        window.addEventListener('resize', this.onResize, false);\n\n        if (!this.animationFrame) {\n            this.animationFrame = requestAnimationFrame(this.animate);\n        }\n\n        document.addEventListener('keydown',this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize, false);\n        this.sceneRef\n            .removeChild(this.domElement);\n    }\n\n    render() {\n        // Remove old player and lights\n        for( let i = this.scene.children.length - 1; i > 0; i--) {\n            let child = this.scene.children[i];\n            this.scene.remove(child);\n        }\n        // Add new player\n        this.player = new PlayerControls(this.props.player);\n        this.scene.add(this.player);\n\n        // Add new lights\n        let lights = new Lights(this.scene.fog, this.player.getMesh(), this.props.lights);\n        this.scene.add(lights);\n\n        let camera = this.player.getPerspectiveCamera();\n\n        // Post processing filters\n        let composer;\n\n        if (this.props.player.modelName === 'Rabbit') {\n            composer = new ComposerRabbit(this.renderer, this.scene, camera)\n        }\n\n        if (this.props.player.modelName === 'Fish') {\n            composer = new ComposerFish(this.renderer, this.scene, camera)\n        }\n\n        // animation\n        let timestamp = 0;\n        this.animate = (time) => {\n            const delta = (time - timestamp) / 1000;\n            timestamp = time;\n            const target = this.player.animate(delta, this.planet);\n            lights.animate(delta, this.scene.fog, target);\n            this.renderer.render(this.scene, camera);\n            this.animationFrame = requestAnimationFrame(this.animate);\n            TWEEN.update(time);\n            if (composer) {\n                composer.render();\n            }\n        };\n\n        return <div ref={ref => (this.sceneRef = ref)} className=\"Scene\"/>;\n    }\n}\n\nScene.propTypes = {\n    planet: PropTypes.shape({\n        radius: PropTypes.number,\n        widthSegments: PropTypes.number,\n        heightSegments: PropTypes.number,\n        seed: PropTypes.number,\n        noiseWidth: PropTypes.number,\n        noiseHeight: PropTypes.number\n    }),\n    player: PropTypes.shape({\n        directionVelocity: PropTypes.number,\n        distance: PropTypes.number,\n        far: PropTypes.number,\n        fov: PropTypes.number,\n        frictionDelay: PropTypes.number,\n        gravity: PropTypes.number,\n        height: PropTypes.number,\n        jumpVelocity: PropTypes.number\n    })\n};\n\nScene.defaultProps = {\n    lights: {\n        distance: 512,\n        rotationSpeed: Math.PI / 30,\n        size: 16\n    },\n    planet: {\n        radius: 128,\n        widthSegments: 48,\n        heightSegments: 32,\n        seed: Date.now(),\n        noiseWidth: 32,\n        noiseHeight: 8\n    }\n};","import React, { Component } from 'react';\nimport './FrontPage.css';\n\nexport default class FrontPage extends Component {\n    constructor(props) {\n        super(props);\n        this.roll = this.roll.bind(this)//             \n    }\n    roll(){\n        // document.querySelector('#a').innerHTML = 'hi'\n        console.log('Speak, friend, and enter')\n    }\n    render(){\n       return <div className = \"Front\">\n                <div className = \"Word\">\n                  <span>X</span>\n                  <span> - </span>\n                  <span>p</span>\n                  <span>l</span>\n                  <span>a</span>\n                  <span>n</span>\n                  <span id = 'a' onMouseOver = {this.roll}>e</span>\n                  <span>t</span>  \n                  </div>\n                <div className = \"instructions\">\n                    <div>Jump? space</div>\n                    <div>Move? wasd</div>\n                    <div>1-human 2-rabbit 3-fish</div>\n                    </div>  \n              </div>\n        \n    }\n}","import React, { Component } from 'react';\nimport { Scene } from './Scene';\nimport FrontPage from './FrontPage';\nimport './App.css';\n\nexport default class App extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            pointerLock : 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document\n                ? false \n                : null,\n            webgl: false,\n            player: {\n                modelName: \"Hero\",\n                directionVelocity: 10,\n                distance: 30,\n                far: 1024,\n                fov: 60,\n                gravity: 9.81 ,\n                height: 1.618,\n                initialY: 256,\n                jumpVelocity: 1,\n                maxGravity: 54 / 2,\n                mouseSpeed: 0.002\n            }\n        };\n        \n        this.pointerLockChange = () => {\n            this.setState({\n                pointerLock : document.pointerLockElement === this.appRef.current || document.mozPointerLockElement === this.appRef.current || document.webkitPointerLockElement === this.appRef.current\n            });\n        };\n\n        this.requestPointerLock = () => {\n            if(this.state.pointerLock === false){\n                this.appRef.requestPointerLock = this.appRef.requestPointerLock || this.appRef.mozRequestPointerLock || this.appRef.webkitRequestPointerLock\n            }\n            this\n            .appRef\n            .requestPointerLock()\n        };\n\n        this.exitPointerLock = () =>{\n            if(this.state.pointerLock === true){\n                document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock || document.webkitExitPointerLock;\n                document.exitPointerLock();\n            }\n        };\n\n        this.onKeyDown = (event) => {\n            switch (event.keyCode) {\n                case 27:\n                    this.exitPointerLock();\n                    break;\n                // switch player model\n                case 50:\n                    this.setState((state, props) => ({\n                        player: {\n                            ...state.player,\n                            modelName: \"Rabbit\"\n                        }\n                    }));\n                    break;\n                case 49:\n                    this.setState((state, props) => ({\n                        player: {\n                            ...state.player,\n                            modelName: \"Hero\"\n                        }\n                    }));\n                    break;\n                case 51:\n                    this.setState((state, props) => ({\n                        player: {\n                            ...state.player,\n                            modelName: \"Fish\"\n                        }\n                    }));\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.pointerLock !== null){\n            document.addEventListener('keydown',this.onKeyDown, false);\n            document.addEventListener('pointerlockchange', this.pointerLockChange, false);\n            document.addEventListener('mozpointerlockchange', this.pointerLockChange, false);\n            document.addEventListener('webkitpointerlockchange', this.pointerLockChange, false);\n            document.addEventListener('pointerlockerror', console.log, false);\n            document.addEventListener('mozpointerlockerror', console.log, false);\n            document.addEventListener('webkitpointerlockerror', console.log, false);\n        }\n        if (window.WebGLRenderingContext){\n            const canvas = document.createElement('canvas'),\n                  webgl  = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n            this.setState({webgl: Boolean(webgl)}) \n        }\n    }\n\n    componentWillUnmount(){\n        if(this.state.pointerLock !== null){\n            document.removeEventListener('keydown', this.onKeyDown, false);\n            document.removeEventListener('pointerlockchange', this.pointerLockChange, false);\n            document.removeEventListener('mozpointerlockchange', this.pointerLockChange, false);\n            document.removeEventListener('webkitpointerlockchange', this.pointerLockChange, false);\n            document.removeEventListener('pointerlockerror', console.log, false);\n            document.removeEventListener('mozpointerlockerror', console.log, false);\n            document.removeEventListener('webkitpointerlockerror', console.log, false);\n        }\n        this.exitPointerLock();\n    }\n\n    render(){\n        const alerts = [];\n        const instructions = this.state.webgl\n              ? \n              <div className = \"App\">\n                  <FrontPage/>\n                  <button id = \"btn\" onClick = {this.requestPointerLock}>Explore</button>\n              </div>\n               : null;\n\n        const content = this.state.webgl \n         && this.state.pointerLock \n             ?<Scene player={this.state.player}/>\n             :<div className=\"App-interface\">\n             {instructions}\n         </div>;\n\n        if(this.state.pointerLock === null){\n            alerts.push('Your browser may not support Pointer Lock API.');\n        }\n        if (this.state.webgl === false){\n            alerts.push('Your browser or device may not support WebGL.')\n        }\n        return <div ref={ref => (this.appRef = ref)} className = \"App\">{content}</div>;\n            \n    }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n  "],"sourceRoot":""}